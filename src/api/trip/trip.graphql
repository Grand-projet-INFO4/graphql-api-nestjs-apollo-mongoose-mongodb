# Queries *************************************************

type Query {
  trips(
    pagination: QueryPagePaginationParams!
    sort: QuerySortParams
    filters: GetTripsFilters
  ): PagePaginatedTrips!
}

input GetTripsFilters {
  cooperativeId: ID
  fromCityId: ID
  fromParkingLotId: ID
  toCityId: ID
  toParkingLotId: ID
  closedPath: Boolean
  status: TripStatus
}

# Types ***************************************************

type Trip {
  id: ID!
  route: EmbeddedRoute!
  path: TripPath!
  currentVehicle: EmbeddedVehicle!
  currentDriver: TripDriver!
  reservedSeats: [String!]
  bookings: [EmbeddedBooking!]!
  status: TripStatus!
  checkoutDelay: Int
  startsAt: DateTime!
  startedAt: DateTime
  completedAt: DateTime
  vehicle: Vehicle!
  drivers: [Driver!]!
  cooperative: Cooperative!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TripPath {
  from: EmbeddedCity!
  to: EmbeddedCity!
}

enum TripStatus {
  ONGOING
  COMPLETED
  INTERRUPTED
}

type PagePaginatedTrips {
  page: Int!
  limit: Int!
  count: Int!
  items: [Trip!]!
}
